package com.bstn.zplviewer.interpreter;

import java.io.File;
import java.util.List;

import com.bstn.zplviewer.graphics.RenderQueue;
import com.bstn.zplviewer.util.UnitConverter;
import com.bstn.zplviewer.zpl.Field;
import com.bstn.zplviewer.zpl.ZPLDocument;
import com.bstn.zplviewer.zpl.command.Command;

public class Interpreter {
	
	private ZPLDocument zplDocument;
	
	public Interpreter(ZPLDocument zplDocument) {
		this.zplDocument = zplDocument;
	}

	public RenderQueue interpret(UnitConverter unitConverter, int labelIndex, File output) {
		InterpreterEnvironment env = new InterpreterEnvironment(unitConverter);
		System.out.println("Yes");
		int labelCount = zplDocument.getLabels().size();
		
		if(0 > labelIndex || labelCount < labelIndex) {
			System.out.println("Error: Label index: " + labelIndex + " out of range (0 - " + labelCount + ")");
			return null;
		}
		
		List<Field> fields = zplDocument.getLabels().get(labelIndex).getFields();
		
		for (Field field : fields) {
			List<Command> propertieLayer = field.getPropertiesLayer();
			
			for (int i = 0; i < propertieLayer.size(); i++) {
				Command command = propertieLayer.get(i);
				command.execute(env);
			}
			
			List<Command> renderingLayer = field.getRenderingLayer();

			for (int i = 0; i < renderingLayer.size(); i++) {
				Command command = renderingLayer.get(i);

				command.execute(env);
			}
			
			env.reset();
		}
		
		return env.getRenderQueue();
		
	}
	
}
