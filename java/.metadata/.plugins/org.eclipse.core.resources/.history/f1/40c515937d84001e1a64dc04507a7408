package renderables;

import java.util.Arrays;

import com.bstn.zplviewer.graphics.Renderer;
import com.bstn.zplviewer.zpl.constants.ZColor;
import com.bstn.zplviewer.zpl.constants.ZFont;
import com.bstn.zplviewer.zpl.constants.ZJustification;
import com.bstn.zplviewer.zpl.constants.ZOrientation;

public class Text extends Renderable {
	private String data;
	private ZFont font;
	
	public Text(float x, float y, float width, float height, ZColor color, ZOrientation orientation, ZJustification justification, String data, ZFont font) {
		super(x, y, width, height, color, orientation, justification);
		this.data = data;
		this.font = font;
	}	
	
	
	
	@Override
	public void render(Renderer renderer) {
		renderer.drawText(this);
	}

	 @Override
	    public String toString() {
	        return "Text [data=" + data + ", font=" + font + ", " +
	                Arrays.stream(Renderable.class.getDeclaredFields())
	                        .peek(field -> field.setAccessible(true))
	                        .map(field -> field.getName() + "=" + getValue(field))
	                        .reduce((s1, s2) -> s1 + ", " + s2)
	                        .orElse("") +
	                "]";
	    }


	public String getData() {
		return data;
	}

	public void setData(String data) {
		this.data = data;
	}

	public ZFont getFont() {
		return font;
	}

	public void setFont(ZFont font) {
		this.font = font;
	}	
}
